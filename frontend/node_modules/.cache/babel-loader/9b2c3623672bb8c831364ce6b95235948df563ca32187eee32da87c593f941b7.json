{"ast":null,"code":"import axios from'axios';import AuthService from'./AuthService';const API_URL='http://localhost:8080/api';class ApiService{// Questions\ncreateQuestion(questionData){return axios.post(API_URL+'/questions',questionData,{headers:AuthService.getAuthHeader()});}getMyQuestions(){return axios.get(API_URL+'/questions',{headers:AuthService.getAuthHeader()});}getQuestion(id){return axios.get(API_URL+'/questions/'+id,{headers:AuthService.getAuthHeader()});}updateQuestion(id,questionData){return axios.put(API_URL+'/questions/'+id,questionData,{headers:AuthService.getAuthHeader()});}deleteQuestion(id){return axios.delete(API_URL+'/questions/'+id,{headers:AuthService.getAuthHeader()});}// Exams\ncreateExam(examData){return axios.post(API_URL+'/exams',examData,{headers:AuthService.getAuthHeader()});}getMyExams(){return axios.get(API_URL+'/exams/my',{headers:AuthService.getAuthHeader()});}getActiveExams(){return axios.get(API_URL+'/exams/active',{headers:AuthService.getAuthHeader()});}getExam(id){return axios.get(API_URL+'/exams/'+id,{headers:AuthService.getAuthHeader()});}updateExamStatus(id,status){return axios.put(API_URL+'/exams/'+id+'/status',{status},{headers:AuthService.getAuthHeader()});}submitExam(id,answers){return axios.post(API_URL+'/exams/'+id+'/submit',{answers},{headers:AuthService.getAuthHeader()});}getMyResults(){return axios.get(API_URL+'/exams/results',{headers:AuthService.getAuthHeader()});}// Forum\npostForumQuestion(questionData){return axios.post(API_URL+'/forum/questions',questionData,{headers:AuthService.getAuthHeader()});}getForumQuestions(){let sortBy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'recent';return axios.get(API_URL+'/forum/questions?sortBy='+sortBy,{headers:AuthService.getAuthHeader()});}getForumQuestion(id){return axios.get(API_URL+'/forum/questions/'+id,{headers:AuthService.getAuthHeader()});}postForumAnswer(questionId,content){return axios.post(API_URL+'/forum/questions/'+questionId+'/answers',{content},{headers:AuthService.getAuthHeader()});}getForumQuestionsByTag(tag){return axios.get(API_URL+'/forum/questions/tag/'+tag,{headers:AuthService.getAuthHeader()});}// Analytics\ngetExamAnalytics(id){return axios.get(API_URL+'/analytics/exams/'+id,{headers:AuthService.getAuthHeader()});}getMyExamAnalytics(){return axios.get(API_URL+'/analytics/exams',{headers:AuthService.getAuthHeader()});}}export default new ApiService();","map":{"version":3,"names":["axios","AuthService","API_URL","ApiService","createQuestion","questionData","post","headers","getAuthHeader","getMyQuestions","get","getQuestion","id","updateQuestion","put","deleteQuestion","delete","createExam","examData","getMyExams","getActiveExams","getExam","updateExamStatus","status","submitExam","answers","getMyResults","postForumQuestion","getForumQuestions","sortBy","arguments","length","undefined","getForumQuestion","postForumAnswer","questionId","content","getForumQuestionsByTag","tag","getExamAnalytics","getMyExamAnalytics"],"sources":["C:/Users/USER/Documents/Code/JavaFest/frontend/src/services/ApiService.js"],"sourcesContent":["import axios from 'axios';\r\nimport AuthService from './AuthService';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\nclass ApiService {\r\n  // Questions\r\n  createQuestion(questionData) {\r\n    return axios.post(API_URL + '/questions', questionData, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getMyQuestions() {\r\n    return axios.get(API_URL + '/questions', {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getQuestion(id) {\r\n    return axios.get(API_URL + '/questions/' + id, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  updateQuestion(id, questionData) {\r\n    return axios.put(API_URL + '/questions/' + id, questionData, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  deleteQuestion(id) {\r\n    return axios.delete(API_URL + '/questions/' + id, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  // Exams\r\n  createExam(examData) {\r\n    return axios.post(API_URL + '/exams', examData, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getMyExams() {\r\n    return axios.get(API_URL + '/exams/my', {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getActiveExams() {\r\n    return axios.get(API_URL + '/exams/active', {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getExam(id) {\r\n    return axios.get(API_URL + '/exams/' + id, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  updateExamStatus(id, status) {\r\n    return axios.put(API_URL + '/exams/' + id + '/status', { status }, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  submitExam(id, answers) {\r\n    return axios.post(API_URL + '/exams/' + id + '/submit', { answers }, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getMyResults() {\r\n    return axios.get(API_URL + '/exams/results', {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  // Forum\r\n  postForumQuestion(questionData) {\r\n    return axios.post(API_URL + '/forum/questions', questionData, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getForumQuestions(sortBy = 'recent') {\r\n    return axios.get(API_URL + '/forum/questions?sortBy=' + sortBy, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getForumQuestion(id) {\r\n    return axios.get(API_URL + '/forum/questions/' + id, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  postForumAnswer(questionId, content) {\r\n    return axios.post(API_URL + '/forum/questions/' + questionId + '/answers', { content }, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getForumQuestionsByTag(tag) {\r\n    return axios.get(API_URL + '/forum/questions/tag/' + tag, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  // Analytics\r\n  getExamAnalytics(id) {\r\n    return axios.get(API_URL + '/analytics/exams/' + id, {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n\r\n  getMyExamAnalytics() {\r\n    return axios.get(API_URL + '/analytics/exams', {\r\n      headers: AuthService.getAuthHeader()\r\n    });\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}