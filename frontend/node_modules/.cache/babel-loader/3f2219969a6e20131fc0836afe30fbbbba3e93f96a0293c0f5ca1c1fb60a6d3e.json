{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Card,Table,Badge,Alert}from'react-bootstrap';import ApiService from'../../services/ApiService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExamResults=()=>{const[results,setResults]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{loadResults();},[]);const loadResults=async()=>{try{const response=await ApiService.getMyResults();setResults(response.data);}catch(error){setError('Failed to load exam results');}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"My Exam Results\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",onClose:()=>setError(''),dismissible:true,children:error}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Card.Body,{children:results.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No exam results found. Take some exams to see your results here!\"})}):/*#__PURE__*/_jsxs(Table,{responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Exam Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Score\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Percentage\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Completed Date\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:results.map(result=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:result.examTitle}),/*#__PURE__*/_jsxs(\"td\",{children:[result.score,\"/\",result.totalQuestions]}),/*#__PURE__*/_jsxs(\"td\",{children:[result.percentage.toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Badge,{bg:result.passed?'success':'danger',children:result.passed?'PASSED':'FAILED'})}),/*#__PURE__*/_jsx(\"td\",{children:new Date(result.completedAt).toLocaleDateString()})]},result.id))})]})})}),results.length>0&&/*#__PURE__*/_jsx(Card,{className:\"mt-4\",children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:\"Performance Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-primary\",children:results.length}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Exams\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-success\",children:results.filter(r=>r.passed).length}),/*#__PURE__*/_jsx(\"p\",{children:\"Passed\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-danger\",children:results.filter(r=>!r.passed).length}),/*#__PURE__*/_jsx(\"p\",{children:\"Failed\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-info\",children:[(results.reduce((sum,r)=>sum+r.percentage,0)/results.length).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Average Score\"})]})})]})]})})]});};export default ExamResults;","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Badge","Alert","ApiService","jsx","_jsx","jsxs","_jsxs","ExamResults","results","setResults","loading","setLoading","error","setError","loadResults","response","getMyResults","data","className","children","role","variant","onClose","dismissible","Body","length","responsive","map","result","examTitle","score","totalQuestions","percentage","toFixed","bg","passed","Date","completedAt","toLocaleDateString","id","Title","filter","r","reduce","sum"],"sources":["C:/Users/USER/Documents/Code/JavaFest/frontend/src/components/exams/ExamResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Table, Badge, Alert } from 'react-bootstrap';\r\nimport ApiService from '../../services/ApiService';\r\n\r\nconst ExamResults = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadResults();\r\n  }, []);\r\n\r\n  const loadResults = async () => {\r\n    try {\r\n      const response = await ApiService.getMyResults();\r\n      setResults(response.data);\r\n    } catch (error) {\r\n      setError('Failed to load exam results');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-spinner\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>My Exam Results</h1>\r\n      \r\n      {error && <Alert variant=\"danger\" onClose={() => setError('')} dismissible>{error}</Alert>}\r\n\r\n      <Card>\r\n        <Card.Body>\r\n          {results.length === 0 ? (\r\n            <div className=\"text-center py-4\">\r\n              <p>No exam results found. Take some exams to see your results here!</p>\r\n            </div>\r\n          ) : (\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>Exam Title</th>\r\n                  <th>Score</th>\r\n                  <th>Percentage</th>\r\n                  <th>Status</th>\r\n                  <th>Completed Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {results.map(result => (\r\n                  <tr key={result.id}>\r\n                    <td>{result.examTitle}</td>\r\n                    <td>{result.score}/{result.totalQuestions}</td>\r\n                    <td>{result.percentage.toFixed(1)}%</td>\r\n                    <td>\r\n                      <Badge bg={result.passed ? 'success' : 'danger'}>\r\n                        {result.passed ? 'PASSED' : 'FAILED'}\r\n                      </Badge>\r\n                    </td>\r\n                    <td>{new Date(result.completedAt).toLocaleDateString()}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      {results.length > 0 && (\r\n        <Card className=\"mt-4\">\r\n          <Card.Body>\r\n            <Card.Title>Performance Summary</Card.Title>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"text-primary\">{results.length}</h4>\r\n                  <p>Total Exams</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"text-success\">{results.filter(r => r.passed).length}</h4>\r\n                  <p>Passed</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"text-danger\">{results.filter(r => !r.passed).length}</h4>\r\n                  <p>Failed</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"text-center\">\r\n                  <h4 className=\"text-info\">\r\n                    {(results.reduce((sum, r) => sum + r.percentage, 0) / results.length).toFixed(1)}%\r\n                  </h4>\r\n                  <p>Average Score</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}