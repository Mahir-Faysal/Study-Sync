{"ast":null,"code":"import axios from'axios';const API_URL='http://localhost:8080/api';class AuthService{login(username,password){return axios.post(API_URL+'/auth/signin',{username,password}).then(response=>{if(response.data.token){localStorage.setItem('user',JSON.stringify(response.data));}return response.data;});}logout(){localStorage.removeItem('user');}register(username,email,password,firstName,lastName,role){return axios.post(API_URL+'/auth/signup',{username,email,password,firstName,lastName,role});}getCurrentUser(){return JSON.parse(localStorage.getItem('user'));}getAuthHeader(){const user=JSON.parse(localStorage.getItem('user'));if(user&&user.token){return{Authorization:'Bearer '+user.token};}else{return{};}}}export default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","firstName","lastName","role","getCurrentUser","parse","getItem","getAuthHeader","user","Authorization"],"sources":["C:/Users/USER/Documents/Code/JavaFest/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + '/auth/signin', {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.token) {\r\n          localStorage.setItem('user', JSON.stringify(response.data));\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  register(username, email, password, firstName, lastName, role) {\r\n    return axios.post(API_URL + '/auth/signup', {\r\n      username,\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      role\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  getAuthHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n      return { Authorization: 'Bearer ' + user.token };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAE3C,KAAM,CAAAC,WAAY,CAChBC,KAAKA,CAACC,QAAQ,CAAEC,QAAQ,CAAE,CACxB,MAAO,CAAAL,KAAK,CACTM,IAAI,CAACL,OAAO,CAAG,cAAc,CAAE,CAC9BG,QAAQ,CACRC,QACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,EAAI,CAChB,GAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC7D,CACA,MAAO,CAAAD,QAAQ,CAACC,IAAI,CACtB,CAAC,CAAC,CACN,CAEAM,MAAMA,CAAA,CAAG,CACPJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC,CACjC,CAEAC,QAAQA,CAACb,QAAQ,CAAEc,KAAK,CAAEb,QAAQ,CAAEc,SAAS,CAAEC,QAAQ,CAAEC,IAAI,CAAE,CAC7D,MAAO,CAAArB,KAAK,CAACM,IAAI,CAACL,OAAO,CAAG,cAAc,CAAE,CAC1CG,QAAQ,CACRc,KAAK,CACLb,QAAQ,CACRc,SAAS,CACTC,QAAQ,CACRC,IACF,CAAC,CAAC,CACJ,CAEAC,cAAcA,CAAA,CAAG,CACf,MAAO,CAAAT,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC,CACjD,CAEAC,aAAaA,CAAA,CAAG,CACd,KAAM,CAAAC,IAAI,CAAGb,IAAI,CAACU,KAAK,CAACZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC,CAAC,CACrD,GAAIE,IAAI,EAAIA,IAAI,CAAChB,KAAK,CAAE,CACtB,MAAO,CAAEiB,aAAa,CAAE,SAAS,CAAGD,IAAI,CAAChB,KAAM,CAAC,CAClD,CAAC,IAAM,CACL,MAAO,CAAC,CAAC,CACX,CACF,CACF,CAEA,cAAe,IAAI,CAAAR,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}