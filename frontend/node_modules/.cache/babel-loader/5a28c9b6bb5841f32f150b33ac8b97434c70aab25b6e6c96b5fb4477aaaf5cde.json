{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code\\\\JavaFest\\\\frontend\\\\src\\\\components\\\\exams\\\\ExamTaking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Row, Col, Badge, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport ApiService from '../../services/ApiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExamTaking = () => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [selectedExam, setSelectedExam] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState('');\n  const [examResult, setExamResult] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadActiveExams();\n  }, []);\n  const loadActiveExams = async () => {\n    try {\n      const response = await ApiService.getActiveExams();\n      setExams(response.data);\n    } catch (error) {\n      setError('Failed to load active exams');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startExam = async exam => {\n    try {\n      const response = await ApiService.getExam(exam.id);\n      setSelectedExam(response.data);\n      setCurrentQuestionIndex(0);\n      setAnswers({});\n    } catch (error) {\n      setError('Failed to load exam details');\n    }\n  };\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < selectedExam.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const prevQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const submitExam = async () => {\n    if (Object.keys(answers).length !== selectedExam.questions.length) {\n      setError('Please answer all questions before submitting');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      const response = await ApiService.submitExam(selectedExam.id, answers);\n      setExamResult(response.data);\n      setSelectedExam(null);\n    } catch (error) {\n      setError('Failed to submit exam');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n  if (examResult) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Exam Completed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: examResult.passed ? 'text-success' : 'text-danger',\n            children: [examResult.score, \"/\", examResult.totalQuestions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            children: [\"Percentage: \", examResult.percentage.toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            bg: examResult.passed ? 'success' : 'danger',\n            className: \"mb-3\",\n            children: examResult.passed ? 'PASSED' : 'FAILED'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => navigate('/results'),\n              children: \"View All Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"ms-2\",\n              onClick: () => {\n                setExamResult(null);\n                loadActiveExams();\n              },\n              children: \"Take Another Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n  if (selectedExam) {\n    const currentQuestion = selectedExam.questions[currentQuestionIndex];\n    const progress = (currentQuestionIndex + 1) / selectedExam.questions.length * 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedExam.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: () => setSelectedExam(null),\n          children: \"Exit Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: () => setError(''),\n        dismissible: true,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", currentQuestionIndex + 1, \" of \", selectedExam.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: '200px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${progress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-4\",\n            children: currentQuestion.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: currentQuestion.questionType === 'TRUE_FALSE' ?\n            /*#__PURE__*/\n            // True/False question options\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `question-option ${answers[currentQuestion.id] === 'TRUE' ? 'selected' : ''}`,\n                onClick: () => handleAnswerChange(currentQuestion.id, 'TRUE'),\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"True\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `question-option ${answers[currentQuestion.id] === 'FALSE' ? 'selected' : ''}`,\n                onClick: () => handleAnswerChange(currentQuestion.id, 'FALSE'),\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"False\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) :\n            // MCQ options\n            ['A', 'B', 'C', 'D'].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `question-option ${answers[currentQuestion.id] === option ? 'selected' : ''}`,\n              onClick: () => handleAnswerChange(currentQuestion.id, option),\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [option, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), \" \", currentQuestion[`option${option}`]]\n            }, option, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              onClick: prevQuestion,\n              disabled: currentQuestionIndex === 0,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), currentQuestionIndex === selectedExam.questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: submitExam,\n              disabled: submitting,\n              children: submitting ? 'Submitting...' : 'Submit Exam'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: nextQuestion,\n              disabled: currentQuestionIndex === selectedExam.questions.length - 1,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Answer Summary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap\",\n            children: selectedExam.questions.map((q, index) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: answers[q.id] ? 'success' : 'outline-secondary',\n              size: \"sm\",\n              className: \"me-2 mb-2\",\n              onClick: () => setCurrentQuestionIndex(index),\n              children: index + 1\n            }, q.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Active Exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setError(''),\n      dismissible: true,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }, this), exams.length === 0 ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"text-center py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No active exams available at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: exams.map(exam => /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        lg: 4,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"exam-card h-100\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: exam.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: exam.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"info\",\n                children: [exam.totalQuestions, \" Questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"success\",\n                className: \"ms-2\",\n                children: exam.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => startExam(exam),\n              className: \"w-100\",\n              children: \"Start Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)\n      }, exam.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamTaking, \"OAnluqJd8wzmaW80rXchnoVW45k=\", false, function () {\n  return [useNavigate];\n});\n_c = ExamTaking;\nexport default ExamTaking;\nvar _c;\n$RefreshReg$(_c, \"ExamTaking\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Row","Col","Badge","Alert","useNavigate","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","ExamTaking","_s","exams","setExams","selectedExam","setSelectedExam","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","loading","setLoading","submitting","setSubmitting","error","setError","examResult","setExamResult","navigate","loadActiveExams","response","getActiveExams","data","startExam","exam","getExam","id","handleAnswerChange","questionId","answer","nextQuestion","questions","length","prevQuestion","submitExam","Object","keys","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","passed","score","totalQuestions","percentage","toFixed","bg","variant","onClick","currentQuestion","progress","title","onClose","dismissible","Header","style","width","questionText","questionType","map","option","disabled","q","index","size","md","lg","Text","description","status","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code/JavaFest/frontend/src/components/exams/ExamTaking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, Button, Row, Col, Badge, Alert } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ApiService from '../../services/ApiService';\r\n\r\nconst ExamTaking = () => {\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedExam, setSelectedExam] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [examResult, setExamResult] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    loadActiveExams();\r\n  }, []);\r\n\r\n  const loadActiveExams = async () => {\r\n    try {\r\n      const response = await ApiService.getActiveExams();\r\n      setExams(response.data);\r\n    } catch (error) {\r\n      setError('Failed to load active exams');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const startExam = async (exam) => {\r\n    try {\r\n      const response = await ApiService.getExam(exam.id);\r\n      setSelectedExam(response.data);\r\n      setCurrentQuestionIndex(0);\r\n      setAnswers({});\r\n    } catch (error) {\r\n      setError('Failed to load exam details');\r\n    }\r\n  };\r\n\r\n  const handleAnswerChange = (questionId, answer) => {\r\n    setAnswers({\r\n      ...answers,\r\n      [questionId]: answer\r\n    });\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (currentQuestionIndex < selectedExam.questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    }\r\n  };\r\n\r\n  const prevQuestion = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n    }\r\n  };\r\n\r\n  const submitExam = async () => {\r\n    if (Object.keys(answers).length !== selectedExam.questions.length) {\r\n      setError('Please answer all questions before submitting');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      const response = await ApiService.submitExam(selectedExam.id, answers);\r\n      setExamResult(response.data);\r\n      setSelectedExam(null);\r\n    } catch (error) {\r\n      setError('Failed to submit exam');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-spinner\">\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (examResult) {\r\n    return (\r\n      <div>\r\n        <Card className=\"text-center\">\r\n          <Card.Body>\r\n            <Card.Title>Exam Completed!</Card.Title>\r\n            <h2 className={examResult.passed ? 'text-success' : 'text-danger'}>\r\n              {examResult.score}/{examResult.totalQuestions}\r\n            </h2>\r\n            <p className=\"lead\">\r\n              Percentage: {examResult.percentage.toFixed(1)}%\r\n            </p>\r\n            <Badge bg={examResult.passed ? 'success' : 'danger'} className=\"mb-3\">\r\n              {examResult.passed ? 'PASSED' : 'FAILED'}\r\n            </Badge>\r\n            <div>\r\n              <Button variant=\"primary\" onClick={() => navigate('/results')}>\r\n                View All Results\r\n              </Button>\r\n              <Button \r\n                variant=\"secondary\" \r\n                className=\"ms-2\"\r\n                onClick={() => {\r\n                  setExamResult(null);\r\n                  loadActiveExams();\r\n                }}\r\n              >\r\n                Take Another Exam\r\n              </Button>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (selectedExam) {\r\n    const currentQuestion = selectedExam.questions[currentQuestionIndex];\r\n    const progress = ((currentQuestionIndex + 1) / selectedExam.questions.length) * 100;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h1>{selectedExam.title}</h1>\r\n          <Button \r\n            variant=\"outline-secondary\"\r\n            onClick={() => setSelectedExam(null)}\r\n          >\r\n            Exit Exam\r\n          </Button>\r\n        </div>\r\n\r\n        {error && <Alert variant=\"danger\" onClose={() => setError('')} dismissible>{error}</Alert>}\r\n\r\n        <Card>\r\n          <Card.Header>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <span>Question {currentQuestionIndex + 1} of {selectedExam.questions.length}</span>\r\n              <div className=\"progress\" style={{ width: '200px' }}>\r\n                <div \r\n                  className=\"progress-bar\" \r\n                  style={{ width: `${progress}%` }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <h5 className=\"mb-4\">{currentQuestion.questionText}</h5>\r\n            \r\n            <div className=\"mb-4\">\r\n              {currentQuestion.questionType === 'TRUE_FALSE' ? (\r\n                // True/False question options\r\n                <>\r\n                  <div \r\n                    className={`question-option ${answers[currentQuestion.id] === 'TRUE' ? 'selected' : ''}`}\r\n                    onClick={() => handleAnswerChange(currentQuestion.id, 'TRUE')}\r\n                  >\r\n                    <strong>True</strong>\r\n                  </div>\r\n                  <div \r\n                    className={`question-option ${answers[currentQuestion.id] === 'FALSE' ? 'selected' : ''}`}\r\n                    onClick={() => handleAnswerChange(currentQuestion.id, 'FALSE')}\r\n                  >\r\n                    <strong>False</strong>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                // MCQ options\r\n                ['A', 'B', 'C', 'D'].map(option => (\r\n                  <div \r\n                    key={option}\r\n                    className={`question-option ${answers[currentQuestion.id] === option ? 'selected' : ''}`}\r\n                    onClick={() => handleAnswerChange(currentQuestion.id, option)}\r\n                  >\r\n                    <strong>{option}:</strong> {currentQuestion[`option${option}`]}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between\">\r\n              <Button \r\n                variant=\"outline-primary\"\r\n                onClick={prevQuestion}\r\n                disabled={currentQuestionIndex === 0}\r\n              >\r\n                Previous\r\n              </Button>\r\n              \r\n              {currentQuestionIndex === selectedExam.questions.length - 1 ? (\r\n                <Button \r\n                  variant=\"success\"\r\n                  onClick={submitExam}\r\n                  disabled={submitting}\r\n                >\r\n                  {submitting ? 'Submitting...' : 'Submit Exam'}\r\n                </Button>\r\n              ) : (\r\n                <Button \r\n                  variant=\"primary\"\r\n                  onClick={nextQuestion}\r\n                  disabled={currentQuestionIndex === selectedExam.questions.length - 1}\r\n                >\r\n                  Next\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Card className=\"mt-3\">\r\n          <Card.Body>\r\n            <h6>Answer Summary:</h6>\r\n            <div className=\"d-flex flex-wrap\">\r\n              {selectedExam.questions.map((q, index) => (\r\n                <Button\r\n                  key={q.id}\r\n                  variant={answers[q.id] ? 'success' : 'outline-secondary'}\r\n                  size=\"sm\"\r\n                  className=\"me-2 mb-2\"\r\n                  onClick={() => setCurrentQuestionIndex(index)}\r\n                >\r\n                  {index + 1}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Active Exams</h1>\r\n      \r\n      {error && <Alert variant=\"danger\" onClose={() => setError('')} dismissible>{error}</Alert>}\r\n\r\n      {exams.length === 0 ? (\r\n        <Card>\r\n          <Card.Body className=\"text-center py-4\">\r\n            <p>No active exams available at this time.</p>\r\n          </Card.Body>\r\n        </Card>\r\n      ) : (\r\n        <Row>\r\n          {exams.map(exam => (\r\n            <Col md={6} lg={4} key={exam.id} className=\"mb-3\">\r\n              <Card className=\"exam-card h-100\">\r\n                <Card.Body>\r\n                  <Card.Title>{exam.title}</Card.Title>\r\n                  <Card.Text>{exam.description}</Card.Text>\r\n                  <div className=\"mb-3\">\r\n                    <Badge bg=\"info\">{exam.totalQuestions} Questions</Badge>\r\n                    <Badge bg=\"success\" className=\"ms-2\">{exam.status}</Badge>\r\n                  </div>\r\n                  <Button \r\n                    variant=\"primary\" \r\n                    onClick={() => startExam(exam)}\r\n                    className=\"w-100\"\r\n                  >\r\n                    Start Exam\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamTaking;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}